name: CI Pipeline
on:
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

env:
  SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
  DBT_USER: ${{ secrets.DBT_USER }}
  DBT_PASSWORD: ${{ secrets.DBT_PASSWORD }}

jobs:
  get-manifest:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
        with:
          ref: refs/heads/main
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pipenv'
      - name: Install Pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
      - name: Install Pipenv dependencies
        run: pipenv install
      - name: Install dbt dependenciees
        run: pipenv run dbt deps --target dev
      - name: Compile dbt project
        run: pipenv run dbt compile --target prod
      - name: Cache manifest file
        uses: actions/cache/save@v4
        with:
          path: target/manifest.json
          key: manifest-${{ github.run_id }}
  ci-run:
    needs: get-manifest
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - name: Restore manifest file
        uses: actions/cache/restore@v4
        with:
          path: target/manifest.json
          key: manifest-${{ github.run_id }}
          fail-on-cache-miss: true
      - name: Move manifest file to root directory
        run: mv target/manifest.json .
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pipenv'
      - name: Install Pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
      - name: Install Pipenv dependencies
        run: pipenv install
      - name: Install dbt dependenciees
        run: pipenv run dbt deps --target ci
      - name: Run and test models
        run: pipenv run dbt build --select "state:modified+" --defer --state . --target ci
      - name: Drop CI schema
        if: ${{ success() }}
        run: | 
          pipenv run dbt run-operation post_ci_cleanup --args "{dry_run: false}" --target ci
