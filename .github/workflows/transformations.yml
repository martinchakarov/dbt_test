name: Transformations
on:
  schedule:
    - cron: "30 */6 * * *" # at minute 30 past every 6th hour

  workflow_dispatch:

env:
  SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
  DBT_USER: ${{ secrets.DBT_USER }}
  DBT_PASSWORD: ${{ secrets.DBT_PASSWORD }}

jobs:
  production-run:
    name: Production Run
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pipenv'
      - name: Install Pipenv
        run: |
          curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
          pipenv install
      - name: Install dbt dependencies
        run: pipenv run dbt deps --target prod
      - name: Run and test models
        run: pipenv run dbt build --target prod
      - name: Generate documentation
        run: pipenv run dbt docs generate --target prod
      - name: Clear cache
        if: ${{ success() }}
        run: |
          for key in manifest catalog index; do
            echo "Deleting cache for key: $key"
            gh cache delete --repo "$GITHUB_REPOSITORY" "$key" || true
          done
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
      - name: Cache manifest file
        uses: actions/cache/save@v3
        with:
          path: target/manifest.json
          key: manifest
      - name: Cache catalog file
        uses: actions/cache/save@v3
        with:
          path: target/catalog.json
          key: catalog
      - name: Cache index file
        uses: actions/cache/save@v3
        with:
          path: target/index.html
          key: index
      - name: Send Slack notification
        if: ${{ failure() }}
        run: |
          curl ${{ secrets.SLACK_DBT_NOTIFICATION_WEBHOOK_URL }} \
            --request POST \
            --header 'Content-type: application/json' \
            --data \
              '{
            "text": "Danny Torrence left a 1 star review for your property.",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "Danny Torrence left the following review for your property:"
                }
              },
              {
                "type": "section",
                "block_id": "section567",
                "text": {
                  "type": "mrkdwn",
                  "text": "<https://example.com|Overlook Hotel> \n :star: \n Doors had too many axe holes, guest in room 237 was far too rowdy, whole place felt stuck in the 1920s."
                },
                "accessory": {
                  "type": "image",
                  "image_url": "https://is5-ssl.mzstatic.com/image/thumb/Purple3/v4/d3/72/5c/d3725c8f-c642-5d69-1904-aa36e4297885/source/256x256bb.jpg",
                  "alt_text": "Haunted hotel image"
                }
              },
              {
                "type": "section",
                "block_id": "section789",
                "fields": [
                  {
                    "type": "mrkdwn",
                    "text": "*Average Rating*\n1.0"
                  }
                ]
              }
            ]
          }'
  documentation-update:
    name: Update Documentation
    needs: production-run
    runs-on: ubuntu-latest
    steps:
      - name: Checkout documentation branch
        uses: actions/checkout@v4
        with:
          ref: refs/heads/gh-pages
      - name: Restore manifest file
        uses: actions/cache/restore@v3
        with:
          path: target/manifest.json
          key: manifest
          fail-on-cache-miss: true
      - name: Restore catalog file
        uses: actions/cache/restore@v3
        with:
          path: target/catalog.json
          key: catalog
          fail-on-cache-miss: true
      - name: Restore index file
        uses: actions/cache/restore@v3
        with:
          path: target/index.html
          key: index
          fail-on-cache-miss: true
      - name: Update documentation
        run: |
          rm -rf docs
          mv target docs
          git config user.email "martin@chakarov.com"
          git config user.name "Martin"
          git add --force docs/manifest.json docs/catalog.json docs/index.html
          git commit -m "Update documentation"
          git push --set-upstream origin gh-pages 
